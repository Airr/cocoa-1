At this point, Feb 29 2014, I failed to make a point of using CAS in DSK's method. It is not easy, but I'd have to move on. Before moving on, I will finalize the project.

# TODO

Use only version 3.
Use gzip.
Streamline the code using version 3.


# Introduction
1. I will introduce a method for counting k-mer with arbitrary size of k by
combining methods of Rizk et al. (2013), and Marcais and Kingsford (2011). 
The point of the paper is the usage of multi-word CAS in counting k-mer.
2. I will introduce a method of counting k-mer upto 32 by
methods of Rizk et al. (2013), and Marcais and Kingsford (2011).
The point of the paper is the usage of CAS n counting k-mer by loading a whole
data into a memory.


binary might not work yet.

# Versions

The first three versions are not of use any more, and they are retired. Instead, I've replaced version 3 with another one, which could have been version 7.

Ver2. 
binary2 (~binary3 single bin), encode2 (~encode5 use lseek), thread2 (~thread4 use lseek and single table)
encode2, thread2 :  I might consider alternative file representations for the input, such using asynchronous I/O and read from multiple points in the file in parallel.
binary2 (just modify binary3)
encode2 = separate infile (~encode3), writing one parfile (~encode5), but read from multiple points in a binfile I wll start from encode5 and get some part of codes from encode3.
thread2 = separate parfile (~thread3), writing one table (~thread3), but read from multiple points in a parfile.



Ver3. Split the binary file, partition files, and runs with multiple threads.
alder_kmer_encode5 -> alder_kmer_encode3
alder_kmer_count_iteration4 -> alder_kmer_count_iteration3
binary3, encode3, thread3


Ver4. Fixed-size input and output buffers.
encode4, thread4
Limited memmory, and enough disk space, single iteration

Ver5. Compressed sequence files or using .bin files.
binary2, encode5, thread4
Limited memory, and limited disk space, multiple iterations

Ver6. Load a whole data in memory and keeping counting 
binary5, thread5
Enough memory, and disk space does not matter as long as a resulting table can fit to the disk space

Use inspect to determine which version can be used.


## To change the command line options.
See alder_kmer_option.c and alder-kmer.ggo.

## To change the behavior of the program depending on command line options.
Use options in main.c.

# Useful
Maximum number of open filehandles per process on OSX
http://stackoverflow.com/questions/5377450/maximum-number-of-open-filehandles-per-process-on-osx-and-how-to-increase

Encoding and decoding kmers by using C union:
http://mbed.org/questions/1277/Union-of-a-uint64_t-and-uint8_t8-array-g/

Measure time of execution:
http://www.harvestsoft.net/measure.htm

Faster division:
http://libdivide.com/documentation.html


# Procedure
1. Read a file in format of sequence only text file, fasta, fastq.
2. Read k-mer one at a time, and count the number of k-mer.
3. Report the count of k-mer.

# Features

Faster processing with less memory.

1. U Hash Table for overflow, and reduce the size of value type 
   to 1 or 2 bytes, or even variable size.

## bit-packed data
Count numbers may be small or variable in size. They could be bit-packed as 
well. Some of k-mers occur more often than others. Some of them occur extremely
often, and many others occur only once.

## Arbitrary k-mer with multi-word CAS

## Effective use of CPU cores

# Uses
gzip for compression
CAS instruction
Constant memory and hard dirve usage
Binary matrix multiplication - Am for f(m) the hash function.
Random invertible matrix multiplication
memory, cpu, hard drive stats.

# Questions
1. What if I know the distribution of keys? This may not make sense because
   I would have the count data after counting was finished.

# GCC function for CAS
http://gcc.gnu.org/onlinedocs/gcc-4.3.5/gcc/Atomic-Builtins.html#Atomic-Builtins

# Unix command
To count A,C,G,T in a file
grep -o . a-00.seq | sort | uniq -ic

# Create Help Book
1. Edit files in alderg-kmerHelp.
2. Rename it by appending .help extension.
3. Delete help book cache.
$ rm -rf /Users/goshng/Library/Caches/com.apple.helpd
4. Open Help Indexer.
5. Load alderg-kmerHelp.help/Contents/Resources/en.lproj, and create the index.
6. Add the help book to Supporting Files in alderg-kmer project.